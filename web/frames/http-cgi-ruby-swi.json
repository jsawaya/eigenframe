{
	"type": "LinearLayout",
	"scrollable": true,
	"orientation": "vertical",
	"gravity": "center_horizontal",
	"layout_width": "match_parent",
	"component_list": [
		{
			"type": "Clone",
			"name": "HorizontalLine"
		},
		{
			"type": "Clone",
			"name": "TextViewLabel",
			"attributes": {
				"text": "Prolog Applications"
			}
		},
		{
			"type": "Clone",
			"name": "TextViewDetail",
			"attributes": {
				"text_list": [
					"Prolog (Programming in Logic) a language based on predicate calculus to evaluate if a certain proposition can be inferred from a knowledge base (rules) using backward chaining algorithms. "
				]
			}
		},
		{
			"type": "Clone",
			"name": "HorizontalLine"
		},
		{
			"type": "Clone",
			"name": "ButtonDefault",
			"attributes": {
				"text": "Prolog Example",
				"icon": {
					"name": "open_browser.",
					"location": "top"
				},
				"on_click": {
					"type": "Clone",
					"name": "PopupScreenDefault",
					"attributes": {
						"title": "Example: routes.pl, route(nottinghill_gate,maida_vale,X)",
						"component_list": [
							{
								"type": "Clone",
								"name": "LayoutVerticalScrollable",
								"attributes": {
									"component_list": [
										{
											"type": "Clone",
											"name": "TextViewDetail",
											"attributes": {
												"text_size": "10",
												"ssh_list": [
													"cd /data/data/com.termux/files/home/git-repos/eigenframe/cgi-bin",
													"ruby ssh_ruby.rb 'swipl_exec(\"swipl-lib/routes.pl\", \"route(nottinghill_gate,maida_vale,X)\")' "
												]
											}
										}
									]
								}
							}
						]
					}
				}
			}
		},
		{
			"type": "Clone",
			"name": "HorizontalLine"
		},
		{
			"type": "JavaScript",
			"script": "eigenFragment.setCacheString('SelectFilePrompt', 0, 'Select Prolog File (KB)')"
		},
		{
			"type": "JavaScript",
			"script_list": [
				"eigenFragment.setCacheString('WorkingDirectory', '')",
				"eigenFragment.setCacheString('SelectedPath', 'git-repos/eigenframe/cgi-bin/swipl-lib')",
				"eigenFragment.setCacheString('SelectedFile', '')"
			]
		},
		{
			"type": "Clone",
			"name": "JavaScriptSelectFilePath"
		},
		{
			"type": "Clone",
			"name": "LayoutVerticalScrollable",
			"attributes": {
				"component_list": [
					{
						"type": "Clone",
						"name": "ButtonDefault",
						"attributes": {
							"text": "Show Prolog File",
							"icon": {
								"name": "open_browser.",
								"location": "top"
							},
							"on_click": {
								"type": "Clone",
								"name": "PopupScreenShowRemoteFile"
							}
						}
					},
					{
						"type": "Clone",
						"name": "ButtonDefault",
						"attributes": {
							"text": "Edit Prolog File",
							"icon": {
								"name": "open_browser.",
								"location": "top"
							},
							"on_click": {
								"type": "Clone",
								"name": "PopupScreenEditRemoteFile"
							}
						}
					}
				]
			}
		},
		{
			"type": "Clone",
			"name": "TextViewLabel",
			"attributes": {
				"text": "Prolog Goal:"
			}
		},
		{
			"type": "EditText",
			"id": 7602,
			"layout_width": "match_parent",
			"layout_height": "wrap_content",
			"text": "houses(X), write(X)",
			"text_color": "#ffffff",
			"background_color": "#000000"
		},
		{
			"type": "Clone",
			"name": "ButtonDefault",
			"attributes": {
				"text": "Execute Prolog Command",
				"icon": {
					"name": "open_browser.",
					"location": "top"
				},
				"on_click": {
					"type": "Clone",
					"name": "PopupScreenDefault",
					"attributes": {
						"title": "Execute Prolog Command",
						"component_list": [
							{
								"type": "Clone",
								"name": "LayoutVerticalScrollable",
								"attributes": {
									"component_list": [
										{
											"type": "Clone",
											"name": "TextViewDetail",
											"attributes": {
												"text_size": "10",
												"ssh_script_list": [
													"var targetVid = eigenFragment.getIntegerVariable('TargetViewId', 0, 6699)",
													"var dir = '/data/data/com.termux/files/home/git-repos/eigenframe/cgi-bin' ",
													"swipl_path = eigenFragment.getViewState(targetVid)",
													"swipl_goal = eigenFragment.getViewState(7602) ",
													"'cd '+dir+'; ruby ssh_swipl.rb \"'+swipl_path+'\" \"'+swipl_goal+'\"  '"
												]
											}
										}
									]
								}
							}
						]
					}
				}
			}
		},
		{
			"type": "Clone",
			"name": "HorizontalLine"
		},
		{
			"type": "Clone",
			"name": "TextViewDetail",
			"attributes": {
				"text_list": [
					"TO DO: more examples"
				]
			}
		}
	]
}

