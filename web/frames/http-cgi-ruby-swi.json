{
	"type": "LinearLayout",
	"scrollable": true,
	"orientation": "vertical",
	"gravity": "center_horizontal",
	"layout_width": "match_parent",
	"component_list": [
		{
			"type": "Clone",
			"name": "HorizontalLine"
		},
		{
			"type": "Clone",
			"name": "TextViewLabel",
			"attributes": {
				"text": "Prolog Installation (swi-prolog)"
			}
		},
		{
			"type": "Clone",
			"name": "TextViewDetail",
			"attributes": {
				"text_list": [
					"Click [Install swi-prolog package] - if you plan to add an inference engine to your app"
				]
			}
		},
		{
			"type": "Clone",
			"name": "ButtonDefault",
			"attributes": {
				"text": "Install swi-prolog package",
				"icon": {
					"name": "file_download.",
					"location": "top"
				},
				"on_click": {
					"type": "Clone",
					"name": "PopupScreenDefault",
					"attributes": {
						"title": "Install swi-prolog package",
						"component_list": [
							{
								"type": "Clone",
								"name": "LayoutVerticalScrollable",
								"attributes": {
									"component_list": [
										{
											"type": "Clone",
											"name": "TextViewDetail",
											"attributes": {
												"text_size": "10",
												"ssh_list": [
													"echo pkg install swi-prolog",
													"pkg install swi-prolog"
												]
											}
										}
									]
								}
							}
						]
					}
				}
			}
		},
		{
			"type": "Clone",
			"name": "TextViewDetail",
			"attributes": {
				"text_list": [
					"Prolog (Programming in Logic) is a programming language, based on predicate calculus, to evaluate if a certain proposition can be inferred from a KB (knowledge base) using an algorithm called backward chaining. ",
					"EigenFrame SWI-Prolog requires:",
					" - Apache2 Installed and running httpd (for CGI post method request into Termux)",
					" - Ruby Installed (for eigenframe transforms)",
					" - SWI-Prolog Installed",
					"These methods use HTTP/CGI (post method) to invoke ruby which calls swi-prolog"
				]
			}
		},
		{
			"type": "Clone",
			"name": "HorizontalLine"
		},
		{
			"type": "Clone",
			"name": "TextViewDetail",
			"attributes": {
				"text_list": [
					"TO DO: examples"
				]
			}
		}
	]
}

